package controller;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import dao.AccesoBD;

@WebFilter("/*") // Aplica este filtro a todas las peticiones
public class Filtro implements Filter {

    public void init(FilterConfig fConfig) throws ServletException {
        // No es necesario inicializar nada por ahora
    }

    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
            throws IOException, ServletException {

        HttpServletRequest httpRequest = (HttpServletRequest) request;
        HttpServletResponse httpResponse = (HttpServletResponse) response;
        HttpSession session = httpRequest.getSession(false); // No crear sesión si no existe

        String nombreSesion = null;
        String tipoUsuario = null;
        Integer saldoCupones = null;
        Integer idRol = null;

        if (session != null) {
            nombreSesion = (String) session.getAttribute("loggedInUser");
            tipoUsuario = "usuario"; // Podrías hacer un check adicional si hay un centro logueado

            if (nombreSesion != null) {
                // Ahora hacemos una consulta a la base de datos para obtener el saldo de cupones y el id_rol
                Connection connection = null;
                PreparedStatement preparedStatement = null;
                ResultSet resultSet = null;

                try {
                    connection = AccesoBD.getConnection();
                    if (connection != null) {
                        // Consulta para obtener el saldo de cupones y el id_rol usando el nombre de usuario
                        String sql = "SELECT saldo_cupones, id_rol FROM usuario WHERE usuario = ?";
                        preparedStatement = connection.prepareStatement(sql);
                        preparedStatement.setString(1, nombreSesion);
                        resultSet = preparedStatement.executeQuery();

                        if (resultSet.next()) {
                            saldoCupones = resultSet.getInt("saldo_cupones");
                            idRol = resultSet.getInt("id_rol");
                        }

                        // Si no se encuentra saldo, lo ponemos a 0 por defecto
                        if (saldoCupones == null) {
                            saldoCupones = 0;
                        }
                    }
                } catch (SQLException e) {
                    e.printStackTrace(); // Podrías loguear el error
                } finally {
                    // Asegúrate de cerrar conexiones
                    AccesoBD.closeConnection(resultSet, preparedStatement, connection);
                }
            }
        }

        // Si el nombreSesion está presente, se pasa a la request para el JSP
        httpRequest.setAttribute("nombreSesion", nombreSesion);
        httpRequest.setAttribute("tipoUsuario", tipoUsuario);
        httpRequest.setAttribute("saldoCupones", saldoCupones != null ? saldoCupones : 0); // Default a 0 si no se encuentra
        httpRequest.setAttribute("idRol", idRol); // Pasar el id_rol a la request

        // Continuar con la cadena de filtros
        chain.doFilter(request, response);
    }

    public void destroy() {
        // No es necesario realizar ninguna limpieza por ahora
    }
}