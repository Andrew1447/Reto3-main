package controller;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import dao.AccesoBD;

@WebServlet("/ProcesarRegistroCentroServlet")
public class ProcesarRegistroCentroServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String nombreCentro = request.getParameter("nombre_centro");
        String numAlumnosStr = request.getParameter("num_alumnos");
        String correo = request.getParameter("correo");
        String codAcceso = request.getParameter("cod_acceso");
        String idCiudadStr = request.getParameter("id_ciudad");
        String idSuscripcionStr = request.getParameter("id_suscripcion");

        // Validaciones básicas (puedes añadir más)
        if (nombreCentro == null || nombreCentro.trim().isEmpty() ||
            numAlumnosStr == null || numAlumnosStr.trim().isEmpty() ||
            correo == null || correo.trim().isEmpty() ||
            codAcceso == null || codAcceso.trim().isEmpty() ||
            idCiudadStr == null || idCiudadStr.trim().isEmpty() ||
            idSuscripcionStr == null || idSuscripcionStr.trim().isEmpty()) {
            request.setAttribute("error", "Todos los campos son obligatorios.");
            request.getRequestDispatcher("CentroRegistro.jsp").forward(request, response);
            return;
        }

        int numAlumnos;
        int idCiudad;
        int idSuscripcion;

        try {
            numAlumnos = Integer.parseInt(numAlumnosStr);
            idCiudad = Integer.parseInt(idCiudadStr);
            idSuscripcion = Integer.parseInt(idSuscripcionStr);
        } catch (NumberFormatException e) {
            request.setAttribute("error", "Por favor, introduce valores numéricos válidos para el número de alumnos, la ciudad y la suscripción.");
            request.getRequestDispatcher("CentroRegistro.jsp").forward(request, response);
            return;
        }

        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            connection = AccesoBD.getConnection();
            if (connection != null) {
                String sql = "INSERT INTO centro_educativo (nombre_centro, num_alumnos, correo, cod_acceso, id_ciudad, id_suscripcion, saldo_cupones) VALUES (?, ?, ?, ?, ?, ?, ?)";
                preparedStatement = connection.prepareStatement(sql);
                preparedStatement.setString(1, nombreCentro);
                preparedStatement.setInt(2, numAlumnos);
                preparedStatement.setString(3, correo);
                preparedStatement.setString(4, codAcceso);
                preparedStatement.setInt(5, idCiudad);
                preparedStatement.setInt(6, idSuscripcion);
                preparedStatement.setInt(7, numAlumnos); // Establecer saldo_cupones igual a num_alumnos

                int filasAfectadas = preparedStatement.executeUpdate();

                if (filasAfectadas > 0) {
                    // Registro exitoso, redirigir a Index.jsp
                    response.sendRedirect("Index.jsp?registro_centro_exito=true");
                    return;
                } else {
                    // Error al registrar, mostrar error en la página de registro
                    request.setAttribute("error", "Error al registrar el centro educativo. Por favor, inténtalo de nuevo.");
                    request.getRequestDispatcher("CentroRegistro.jsp").forward(request, response);
                    return;
                }
            } else {
                request.setAttribute("error", "Error al conectar con la base de datos.");
                request.getRequestDispatcher("CentroRegistro.jsp").forward(request, response);
                return;
            }

        } catch (SQLException e) {
            e.printStackTrace();
            request.setAttribute("error", "Error en la base de datos: " + e.getMessage());
            request.getRequestDispatcher("CentroRegistro.jsp").forward(request, response);
            return;
        } finally {
            AccesoBD.closeConnection(null, preparedStatement, connection);
        }
    }
}